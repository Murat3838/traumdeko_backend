// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VeragWebApp.Repos;

#nullable disable

namespace zeiterfassung.server.Migrations
{
    [DbContext(typeof(VeragDB))]
    [Migration("20250620233227_AddTodos")]
    partial class AddTodos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("VeragWebApp.Repos.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("closed_at");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("customer_name");

                    b.Property<decimal>("Deposit")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("deposit");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("event_date");

                    b.Property<DateTime?>("EventEnd")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("event_end");

                    b.Property<DateTime?>("EventStart")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("event_start");

                    b.Property<int?>("EventTypeId")
                        .HasColumnType("int")
                        .HasColumnName("event_type_id");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_closed");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext")
                        .HasColumnName("notes");

                    b.Property<decimal>("Outstanding")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("outstanding");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("total_amount");

                    b.HasKey("Id");

                    b.HasIndex("EventTypeId");

                    b.ToTable("events");
                });

            modelBuilder.Entity("VeragWebApp.Repos.Models.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("event_types");
                });

            modelBuilder.Entity("VeragWebApp.Repos.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<int?>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("event_id");

                    b.Property<int>("Payer")
                        .HasColumnType("int")
                        .HasColumnName("payer");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("expenses");
                });

            modelBuilder.Entity("VeragWebApp.Repos.Models.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("incomes");
                });

            modelBuilder.Entity("VeragWebApp.Repos.Models.TblRefreshtoken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("deviceid");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expires");

                    b.Property<string>("RefreshToken")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("refreshtoken");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revoked");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.ToTable("tbl_refreshtoken");
                });

            modelBuilder.Entity("VeragWebApp.Repos.Models.TblRole", b =>
                {
                    b.Property<string>("username")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("username");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role");

                    b.HasKey("username");

                    b.ToTable("tblRole");
                });

            modelBuilder.Entity("VeragWebApp.Repos.Models.TblUser", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mit_username");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("mit_email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("mit_vname");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mit_pwd");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("mit_telefonnr");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mit_position");

                    b.Property<int?>("TimasId")
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("mit_timasId");

                    b.Property<bool?>("isGekuendigt")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mit_gekuendigt");

                    b.HasKey("Username");

                    b.ToTable("tblMitarbeiter");
                });

            modelBuilder.Entity("VeragWebApp.Repos.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Assignee")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("assignee");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("description");

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("event_id");

                    b.Property<bool>("IsDone")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_done");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("todos");
                });

            modelBuilder.Entity("VeragWebApp.Repos.Models.Event", b =>
                {
                    b.HasOne("VeragWebApp.Repos.Models.EventType", "EventType")
                        .WithMany("Events")
                        .HasForeignKey("EventTypeId");

                    b.Navigation("EventType");
                });

            modelBuilder.Entity("VeragWebApp.Repos.Models.Expense", b =>
                {
                    b.HasOne("VeragWebApp.Repos.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("VeragWebApp.Repos.Models.Income", b =>
                {
                    b.HasOne("VeragWebApp.Repos.Models.Event", "Event")
                        .WithMany("Incomes")
                        .HasForeignKey("EventId");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("VeragWebApp.Repos.Models.Todo", b =>
                {
                    b.HasOne("VeragWebApp.Repos.Models.Event", "Event")
                        .WithMany("Todos")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("VeragWebApp.Repos.Models.Event", b =>
                {
                    b.Navigation("Incomes");

                    b.Navigation("Todos");
                });

            modelBuilder.Entity("VeragWebApp.Repos.Models.EventType", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
